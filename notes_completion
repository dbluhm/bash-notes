NOTESDIR="$HOME/.notes"

__dirs() {
    for f in $NOTESDIR/*; do
        [ -d "$f" ] || continue
        [[ "$f" == ".git" ]] && continue
        basename "$(printf "%q\n" "$f")"
    done
    if [ -n "$1" ]; then
        echo "--search -s --remove -r --add -a"
    fi
}

__files() {
    for f in $NOTESDIR/"$(eval "echo $1")"/*; do
        [ -d "$f" ] && continue
        basename "$(printf "%q\n" "$f")" | sed -e 's/\.md//'
    done
}

_notes () {
    local cur

    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}

    if [ ${#COMP_WORDS[@]} -gt 2 ] && [ $COMP_CWORD -eq 2 ]; then
        case "${COMP_WORDS[1]}" in
            -s|--search)
                ;;
            -r|--remove)
                mapfile -t COMPREPLY < <( compgen -W "$(__dirs)" -- "${cur}" )
                ;;
            -a|--add)
                ;;
            *)
                mapfile -t COMPREPLY < <(compgen -W "$(__files "${COMP_WORDS[1]}")" -- "${cur}")
                ;;
        esac
    elif [ ${#COMP_WORDS[@]} -gt 2 ] && [ $COMP_CWORD -eq 3 ]; then
        case "${COMP_WORDS[1]}" in
            -r|--remove)
                mapfile -t COMPREPLY < <(compgen -W "$(__files "${COMP_WORDS[2]}")" -- "${cur}")
            ;;
            *)
            ;;
        esac
    elif [ ${#COMP_WORDS[@]} -eq 2 ]; then
        mapfile -t COMPREPLY < <( compgen -W "$(__dirs 1)" -- "${cur}" )
    fi
}
complete -o filenames -F _notes notes

# vi:syntax=sh
